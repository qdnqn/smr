name: Go

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22.x' ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Display Go version
        run: go version
      - name: Test code
        run: go test
      - name: Build code
        run: |
          BASE_DIR="$PWD"
          
          for dir in implementations/*/
          do
            DIR=${dir%*/}
            DIRNAME="${DIR##*/}"
          
            cd "$BASE_DIR/implementations/$DIRNAME"
            go build --buildmode=plugin
          done
          
          cd "$BASE_DIR"
  
          for dir in operators/*/
          do
            DIR=${dir%*/}
            DIRNAME="${DIR##*/}"
          
            cd "$BASE_DIR/operators/$DIRNAME"
            go build --buildmode=plugin
          done
          
          cd "$BASE_DIR"
          
          go build
      - name: Build and push docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login docker.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build . --file docker/Dockerfile --tag docker.io/qdnqn/smr:$GITHUB_REF
          docker push docker.io/qdnqn/smr:$GITHUB_REF

  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go1.22.0.linux-amd64.tar.gz"
          project_path: "./"
          binary_name: "smr"
          extra_files: LICENSE README.md
